
The goal of this project is to produce a recommendation engine that recommends books
based on whether similar topics already exist in the user's library or not. Ideally,
the recommended book should be on a completely "new" topic to the user.

Phase 1: Select "best" book from options, hosted with GCP
  "best" is to be considered as "least similar" of the options
  can be possibly done with a simple heuristic, minimal ml at worst
  <- learn about recommendation systems and how they typically represent the problem
  <- improve organization of these "phase" lists with todo integration (separate "plan" folder?)


  work on gcp UI
    figure out how to produce nice webpages instead of just returning text

  create test data set of books that i already own
    <- this will be used to measure the performance of the algorithm
    <- need a balance of unique and similar titles
      <- can even pick titles i don't have but know are similar/different if i need more data
  create system that reads everything from goodreads every time
    automatically remove test books from the "library" information
  test system against "choices.csv" dataset
    first remove the "remove test books" code
    buy the book that gets recommended from it
  integrate with caching/storage to maintain user data between requests
    <- change system to not have everything hard-coded for me
  allow for specifying a different set of options

Phase 2: Select "best" book (user doesn't give set of options)
  can still maintain the ability to restrict to a list
  active development of product specific ml models

Phase 3: Select "topic" to considered
  general conception of what "topics" are in the library and what aren't

General Work:
  UI Improvements
  Interesting Graph Explorations
  Library Integrations

TODO: Go over this to see what we are keeping and when
Short-term:
  Add "fiction" classification to the config file and split my goodreads data on that
  Look at using https://openlibrary.org/dev/docs/api/books to extract more information from the books
    NOTE: Interestingly it provides a "subject" field as part of the response, which may be useful
    NOTE: See also if we can't use the "classifications" field to filter out non-fiction books
    TODO: This won't actually work as not all books have isbn fields from goodreads (for some reason)
  Implement the ML approaches necessary to extract relevant "topical" information from the descriptions
  Add in logging instead of print messages

Long-term:
  Introduce a "ml-frontend" interface api and convert the goodreads code to utilizing it
    Extract the existing codebase into the "goodreads_frontend" module
      Rewrite querying code to utilize the interface (allow for querying from alternate "warehouses")
  Start working on creating the "global knowledge graph"
    TODO: Figure out what we'll need to produce in order to be effective
    IDEA 1: Parse out popular wikipedia articles
      Produce graph of topics extracted from the article (where edge = appear in same article)
      Issues: May not cover total knowledge well, may not be effective at extracting new topics (too broad?)
  Clean up the code base
  Reduce technical debt
    Introduce ability to filter books based on shelves to the goodreads frontend
    Allow for filtering individual books based on the author, etc.
    Rework the goodreads api to communicate through a singular communicator object
    Improve the `BookShelf` object to allow for lazy memoization of results (ie. minimize network usage)

Future-work:
  Attempt to produce an ml model that will classify books as "fiction" or "non-fiction"
    TODO: We would probably want to base this primarily off of the description
    NOTE: This will be a good "introduction" into setting up the ml framework, even if it doesn't work
  Look into https://maciejkula.github.io/spotlight/index.html
  Augment the recommendation model to work on fiction books
  Implement "google maps" style zooming system to the knowledge graph, whereby the broadest topics are only visibile at the "lowest zoom"
  Migrate the backend work to AWS

goodreads genres:
  https://www.goodreads.com/genres
  https://www.goodreads.com/genres

genre classification with ml:
  https://github.com/ahegel/genre-ML-classification
  https://www.datacamp.com/community/tutorials/ML-NLP-lyric-analysis
