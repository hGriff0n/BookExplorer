
Short-term:
  Add "fiction" classification to the config file and split my goodreads data on that
  Look at using https://openlibrary.org/dev/docs/api/books to extract more information from the books
    NOTE: Interestingly it provides a "subject" field as part of the response, which may be useful
    NOTE: See also if we can't use the "classifications" field to filter out non-fiction books
    TODO: This won't actually work as not all books have isbn fields from goodreads (for some reason)
  Implement the ML approaches necessary to extract relevant "topical" information from the descriptions
  Add in logging instead of print messages

Long-term:
  Introduce a "ml-frontend" interface api and convert the goodreads code to utilizing it
    Extract the existing codebase into the "goodreads_frontend" module
      Rewrite querying code to utilize the interface (allow for querying from alternate "warehouses")
  Start working on creating the "global knowledge graph"
    TODO: Figure out what we'll need to produce in order to be effective
    IDEA 1: Parse out popular wikipedia articles
      Produce graph of topics extracted from the article (where edge = appear in same article)
      Issues: May not cover total knowledge well, may not be effective at extracting new topics (too broad?)
  Clean up the code base
  Reduce technical debt
    Introduce ability to filter books based on shelves to the goodreads frontend
    Allow for filtering individual books based on the author, etc.
    Rework the goodreads api to communicate through a singular communicator object
    Improve the `BookShelf` object to allow for lazy memoization of results (ie. minimize network usage)

Future-work:
  Attempt to produce an ml model that will classify books as "fiction" or "non-fiction"
    TODO: We would probably want to base this primarily off of the description
    NOTE: This will be a good "introduction" into setting up the ml framework, even if it doesn't work
  Look into https://maciejkula.github.io/spotlight/index.html
  Augment the recommendation model to work on fiction books
  Implement "google maps" style zooming system to the knowledge graph, whereby the broadest topics are only visibile at the "lowest zoom"
  Migrate the backend work to AWS
